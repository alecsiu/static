#!/bin/bash

# Script to generate an index.html page that lists all HTML files in the current directory
# with descriptions generated by Claude Code

OUTPUT_FILE="index.html"

# Create a prompt for Claude to analyze the HTML files and generate an index
CLAUDE_PROMPT="You are generating an index page for a website. Your task:

1. Analyze the HTML files in the current directory (excluding index.html)
2. For each HTML file found, examine its content to understand what it does
3. Generate a beautiful, modern index.html page with:
   - A clean, professional design
   - A list of all HTML files (except index.html itself)
   - Each file should be a clickable link
   - Each link should have a 1-2 sentence description based on your analysis of the file content
   - Use modern CSS with good spacing, typography, and color scheme
   - Make it responsive and visually appealing

IMPORTANT: Output ONLY the raw HTML code between these markers:
<START_HTML>
<!DOCTYPE html>
...your complete HTML here...
</END_HTML>

Do not include any explanation, markdown, code fences, or other text outside these markers."

# Use Claude Code CLI to generate the index
echo "Generating index.html with Claude Code..."
TEMP_OUTPUT=$(claude "$CLAUDE_PROMPT")

# Extract HTML content between markers
HTML_CONTENT=$(echo "$TEMP_OUTPUT" | sed -n '/<START_HTML>/,/<\/END_HTML>/p' | sed '/<START_HTML>/d' | sed '/<\/END_HTML>/d')

# If marker-based extraction didn't work, try extracting from markdown code blocks
if [ -z "$HTML_CONTENT" ]; then
    HTML_CONTENT=$(echo "$TEMP_OUTPUT" | sed -n '/^```html$/,/^```$/p' | sed '/^```/d')
fi

# Write the extracted HTML to the output file
if [ ! -z "$HTML_CONTENT" ]; then
    echo "$HTML_CONTENT" > "$OUTPUT_FILE"
    echo "Successfully generated $OUTPUT_FILE"
else
    echo "Error: Could not extract HTML from Claude's response"
    exit 1
fi
